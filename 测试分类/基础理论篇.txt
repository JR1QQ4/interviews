1.软件测试的定义
- 软件测试的艺术的定义：测试是为发现错误而执行程序的过程
- IEEE定义：使用人工或自动手段来运行或测定某个系统的过程，其目的在于检验它是否满足规定的需求或是弄清预期结果与实际结果之间的差别
- GB/T 11457：依据规范的软件测试过程和检测方法，按照测试计划和测试需求对被检测软件的文档、程序和数据进行测试的技术活动
- 其他：
    - 确信程序做了它应该做的事情
    - 确认程序正确实现了所要求的功能
    - 查出规格说明中错误，以及规格说明不符的地方
    - 测试是一切以评价程序或系统的属性、能力为目的的活动；测试是对程序质量的度量
    - 评价程序或系统的过程
    - 测试是与软件开发或位符工作并行进行的一个过程
    - 测试是一个获取信息，降低决策风险的过程。通过测试，向整个团队提供关于产品质量和项目环境的信息，帮助他们做出决定

2.软件测试的过程
- 分析测试需求：了解软件要做什么，怎么做，进而确定将来怎么测试
- 编写测试计划：由测试负责人编写
    - 内容：产品概述、测试范围/测试区域/测试项、测试目标/被测特征、测试优先级、测试配置/测试资源（硬件、软件、人力）、测试周期、
    进度安排（测试任务、人员安排）、测试策略、测试方法/途径、测试交流、风险分析、测试标准、需交付文档等内容
- 设计与编写测试用例
- 执行测试：搭建测试环境，执行测试用例，记录测试事件，提交和跟踪缺陷
- 评估与总结

3.软件测试的目的/目标：
- 单元测试阶段，预防错误
- 开发测试阶段（集成测试、系统测试），发现错误
- 验收测试阶段，建立信心
- 运行测试（性能、兼容、安装升级、非功能测试），提供信息

4.概念
- 测试：由测试人员发现，用于发现、报告和跟踪缺陷
- 调试：由开发人员进行，用于定位缺陷位置，识别缺陷产生原因，修改缺陷代码
- 软件质量保证SQA：制定和加强促进软件开发并防止软件缺陷的标准和方法，并监督标准和过程被正确的遵循
- 软件测试：在最短的时间类发现尽可能多的缺陷，并确保这些缺陷得以修复

5.软件质量需求
- 用于确定测试目标
- 测试目标包括：功能、性能、界面、易用性、兼容性、安全性、可用性/可靠性、可维护性、可扩展性等，功能以外统称非功能
    - 功能：软件能做什么，需要做什么，怎么做是正确的，哪些功能需要测试、哪些不需要测试，哪些功能重要、哪些不重要，哪些先测试、哪些后测试
    - 性能：时间特性（时间短、速度快、效率高），资源特性（占用资源CPU、内存、硬盘、网络少）
    - 界面（UI）：布局合理，控件位置恰当，文字没有乱码、字体大小合适，颜色使用恰当，图片、表格恰当、舒适、美观
    - 易用性：软件产品被理解、学习、使用和吸引用户的能力
    - 兼容性/可移植性：包括与不同硬件、平台、软件自身不同版本、其他软件、数据的兼容
    - 安全性：软件产品保护信息和数据的能力
    - 可用性/可靠性：可用性=正常运行时间/(正常运行时间+非正常运行时间)*100%，可用性一般要求达到4个9即99.99%（全年52分钟不正常工作），
    测试时间不足可以采用空间换时间的方法（高负载运行），关注MTTF(平均无故障时间)、MTTR(平均恢复时间)、MTBF(平均失效间隔时间)
    - 可维护性：修正、改进或软件对环境需求和功能规格说明变化的适应（打补丁、自动恢复）
    - 可扩展性/可伸缩性测试：通过很少的改动就能实现整个系统处理能力的增长

6.怎么研读文档
- 总体上
    - 分析软件的用户群，分析用户的实际需要
    - 分析软件的开发环境、开发语言
    - 分析软件架构、软件的运行环境和平台、数据库类型
    - 分析软件要实现哪些目标（功能、性能、界面、易用性、兼容性、安全性）以及具体的要求是什么
    - 分析软件有哪些功能，每个功能要完成什么业务，这些业务应该怎么实现，业务逻辑是什么，业务流程是怎么样的
    - 分析功能或业务间的联系，哪些业务更关键或重要
    - 明确测试周期，测试目标，测试范围
- 细节上
    - 分析每个模块或功能上实现的功能
    - 设计的开发原理包括数据类型
    - 从用户使用场景角度分析业务流程
    - 记录业务规则
- 实施
    - 以情境再现的形式写出需求信息

7.软件测试的原则
- 搜友的测试都应该追溯到用户需求
- 尽早启动测试工作：缺陷雪崩，测试的成本
- 早做测试计划
- 穷尽测试是不可能的 & 软件测试是有风险的
- 测试工作的 Good-enough 原则：既不要过多测试，也不做不充分的测试
- Pareto（帕累托）法则，28效率原则
- 尽可能使用分阶段测试
- 为了达到最佳效果，应该由独立的第三方来构造测试
- 测试旨在发现存在的缺陷
- 为了保证测试的有效性和高效性，测试必须是破坏性、系统性的
- 找到的软件缺陷越多，说明软件隐含的缺陷越多
- 杀虫剂怪事
- 使用木桶原理
- 前进两步，后退一步：缺陷修复总会有一定机率引入新的缺陷，再测试/确认测试，回归测试
- 软件测试是一个迭代的过程
- 测试需要遵循标准：国际标准（如ISO、CMM、IEEE），国家标准（GB、GB/T），行业标准，公司标准，用户规定
- 其他的一些测试理念：思路决定测试，具体问题具体分析，无责任心不成测试，测试不能靠猜测

8.常见的开发模型
- 大爆炸模型：计划、进度安排和正规开发过程都几乎没有
- 边写边改模型：摸着石子过河模型，典型的非正规说明书->编码、修改、反复->最终产品
- 瀑布模型：
- 螺旋模型
- 敏捷模型






