在 PC 浏览器的地址栏输入一串 URL，然后按 Enter 键这个页面渲染出来，这个过程中都发生了什么事?
1、首先，在浏览器地址栏中输入 url，先解析 url，检测 url 地址是否合法
2、浏览器先查看浏览器缓存-系统缓存-路由器缓存，如果缓存中有，会直接在屏幕中显示页面内容。若没有，则跳到第三步操作。
浏览器缓存：浏览器会记录 DNS 一段时间，因此，只是第一个地方解析 DNS 请求；
操作系统缓存：如果在浏览器缓存中不包含这个记录，则会使系统调用操作系统，获取操作系统的记录(保存最近的 DNS 查询缓存)；
路由器缓存：如果上述两个步骤均不能成功获取 DNS 记录，继续搜索路由器缓存；
ISP 缓存：若上述均失败，继续向 ISP 搜索。
3、在发送 http 请求前，需要域名解析(DNS 解析)，解析获取相应的 IP 地址
4、浏览器向服务器发起 tcp 连接，与浏览器建立 tcp 三次握手
5、握手成功后，浏览器向服务器发送 http 请求，请求数据包
6、服务器处理收到的请求，将数据返回至浏览器
7、浏览器收到 HTTP 响应
8、浏览器解码响应，如果响应可以缓存，则存入缓存
9、浏览器发送请求获取嵌入在 HTML 中的资源（html， css， javascript，图片，音乐······），对于未知类型，会弹出对话框
10、浏览器发送异步请求
11、页面全部渲染结束

get 和 post 请求区别?
单的说，GET 产生一个 TCP 数据包； POST 产生两个 TCP 数据包
长的说，对于 GET 方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200（返回数据）；
而对于 POST，浏览器先发送 header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok（返回数据）

cookies 机制和 session 机制的区别?
cookies 数据保存在客户端， session 数据保存在服务器端；
cookies 可以减轻服务器压力，但是不安全，容易进行 cookies 欺骗；
session 较安全，但占用服务器资源

HTTP 状态码？
200 请求已成功，请求所希望的响应头或数据体将随此响应返回
201 请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随 Location 头信息返回
202 服务器已接受请求，但尚未处理
301 （永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置
302 （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求
303 （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码
304 （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容
305 （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理
307 （临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求
401 当前请求需要用户验证。如果当前请求已经包含了 Authorization 证书，那么 401 响应代表着服务器验证已经拒绝了那些证书
403 服务器已经理解请求，但是拒绝执行它。与 401 响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交
404 请求失败，请求所希望得到的资源未被在服务器上发现
500 服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现
501 服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求
502 作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应
503 由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复

http 协议有哪几种请求方式？
GET, POST 和 HEAD 方、 OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法

http 和 https 区别?
HTTPS = SSL（Secure Sockets Layer） + HTTP。
https 协议需要到 ca 申请证书，一般免费证书较少，因而需要一定费用
http 是超文本传输协议，信息是明文传输， https 则是具有安全性的 ssl 加密传输协议
http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443
http 的连接很简单，是无状态的； HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 http 协议安全

HTTP 请求报文与响应报文格式?
请求报文包含三部分：
a、请求行：包含请求方法、 URI、 HTTP 版本信息
b、请求头部（headers）字段
c、请求内容实体(body)
响应报文包含三部分：
a、状态行：包含 HTTP 版本、状态码、状态码的原因短语
b、响应头部（headers）字段
c、响应内容(body)实体

常见的 POST 提交数据方式?
application/x-www-form-urlencoded
multipart/form-data
application/json
text/xml

什么是 DNS？
域名解析服务。将主机名转换为 IP 地址。如将 http://www.cnblogs.com/主机名转换为 IP 地址： 211.137.51.78

什么是 Http 协议无状态协议?怎么解决 Http 协议无状态协议?
无状态协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息
无状态协议解决办法： 通过 1、 Cookie 2、通过 Session 会话保存

接口测试：
- 业务功能测试：正常场景、异常场景
- 边界分析测试
    - 业务规则边界分析
    - 输入输出参数边界分析
        - 覆盖所有的必选参数
        - 组合可选参数
        - 参数有、无或null
        - 参数的顺序、个数、类型
        - 参数类型数值大小、输入的数值范围
        - 参数字串长短：null-max-max+1
        - 参数包含特殊字符
- 参数组合测试
- 异常情况测试
    - 重复提交
    - 并发测试
    - 事务测试
    - 分布式测试
    - 环境异常
    - 大数据测试
        - 同时处理大批数据的测试
        - DB数据量很大时，测试DB操作
- 性能测试
    - 响应时间
    - 吞吐量
    - 并发数
    - 服务器资源使用率：CPU、内存、IO、NETWORK
- 安全测试
    - 敏感信息是否加密
        - 前后端数据传输是否加密
        - 日志信息是否加密
    - sql注入

1.json 和字典的区别？ -对基础数据类型的考察
2.测试的数据你放在哪？ -数据与脚本分离
    - 对于账号密码，这种管全局的参数，可以用命令行参数，单独抽出来，写的配置文件里（如 ini）
    - 对于一些一次性消耗的数据，比如注册，每次注册不一样的数，可以用随机函数生成
    - 对于一个接口有多组测试的参数，可以参数化， 数据放 yaml,text,json,excel 都可以
    - 对于可以反复使用的数据，比如订单的各种状态需要造数据的情况，可以放到数据库，每次数据初始化，用完后再清理
    - 对于邮箱配置的一些参数，可以用 ini 配置文件
    - 对于全部是独立的接口项目，可以用数据驱动方式，用 excel/csv 管理测试的接口数据
    - 对于少量的静态数据，比如一个接口的测试数据，也就 2-3 组，可以写到 py 脚本的开头，十年八年都不会变更的
3.参数化 - 数据驱动模式
4.下个接口请求参数依赖上个接口的返回数据 - [参数关联](https://www.cnblogs.com/yoyoketang/p/9671952.html)
5.依赖于登录的接口如何处理 -token 和 session 的管理，[地址](https://www.cnblogs.com/yoyoketang/p/9264773.html)
6.依赖第三方的接口如何处理 -mock 模拟数据返回，[moco](https://github.com/dreamhead/moco)
7.不可逆的操作，如何处理，比如删除一个订单这种接口如何测试 -造数据
8.接口产生的垃圾数据如何清理 - 数据清理
9.一个订单的几种状态如何全部测到，如：未处理，处理中，处理失败，处理成功 - 造数据，改数据库订单状态
10.python 如何连接数据库操作？
11.其它的就是运行出报告、代码管理（git）、运行策略和持续集成 jenkins 相关了






























